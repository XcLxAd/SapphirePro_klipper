# ##################################
# Two Trees Sapphire Pro
# m/b Robin Nano 1.2, 
# TMC 2209 drivers for X,Y,E and 2208 for Z
####################################

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[temperature_sensor MCU]
sensor_type: temperature_mcu

[printer]
kinematics: corexy
max_velocity: 250
max_accel: 1800
max_z_velocity: 10
max_z_accel: 20
minimum_cruise_ratio: 0.65

# ##################################
# STEPPER'S
####################################

[stepper_x]
step_pin: PE3
dir_pin: !PE2
enable_pin: !PE4
endstop_pin: !PA15
microsteps: 128
rotation_distance: 39.815
position_endstop: 0
position_max: 225
homing_speed: 40

[stepper_y]
step_pin: PE0
dir_pin: !PB9
enable_pin: !PE1
endstop_pin: !PA12
microsteps: 128
rotation_distance: 39.823
position_endstop: 225
position_max: 225
homing_speed: 40

[stepper_z]
step_pin: PB5
dir_pin: !PB4
enable_pin: !PB8
endstop_pin: PA11
microsteps: 128
rotation_distance: 2
position_endstop = 1.15
position_max: 200
position_min: -0.5

# ##################################
# TMC UART
####################################

[tmc2209 stepper_x]
uart_pin: PA6
uart_address: 0
run_current: 0.750
#hold_current: 0.400
interpolate: False

[tmc2209 stepper_y]
uart_pin: PA6
uart_address: 1
run_current: 0.750
#hold_current: 0.400
interpolate: False

[tmc2208 stepper_z]
uart_pin: PA1
run_current: 0.800
#hold_current: 0.550
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PA6
uart_address: 2
run_current: 0.700
#hold_current: 0.100
interpolate: false

# ##################################
# HEATER'S
####################################

[extruder]
# Stepper
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 128
# Heater
heater_pin: PC3
#   One of "EPCOS 100K B57560G104F", "ATC Semitec 104GT-2",
#   "ATC Semitec 104NT-4-R025H42G", "Generic 3950",
#   "Honeywell 100K 135-104LAG-J01", "NTC 100K MGB18-104F39050L32",
#   "SliceEngineering 450", or "TDK NTCG104LH104JT1"
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC1
min_temp: 0
max_temp: 270
control = pid
pid_kp = 28.741
pid_ki = 1.758
pid_kd = 117.477
# Sherpa_Mini-Extruder
gear_ratio: 50:10 
rotation_distance: 23.122
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
min_extrude_temp: 210
max_extrude_only_distance: 500
max_extrude_only_velocity: 75 
max_extrude_only_accel:    1500

[heater_bed]
heater_pin: PA0
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC0
min_temp: 0
max_temp: 120
control = pid
pid_kp = 75.046
pid_ki = 1.685
pid_kd = 835.829

[temperature_sensor chamber]
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC2

# ##################################
# FAN'S
####################################

[heater_fan extruder]
pin: PB0
heater_temp: 50.0
fan_speed: 1.0
kick_start_time: 0.1

[fan]
pin: PB1
kick_start_time: 0.1

# ##################################
# BEEPER
####################################

[output_pin BEEPER]
pin: PC5

# ##################################
# DISPLAY
####################################

[static_digital_output reset_display]
pins: !PC6, !PD13

# ##################################
# POWER ON/OFF
####################################

[output_pin PW_OFF]
pin: PB2
value: 1

[gcode_button PW_OFF]
pin: ^PA2
press_gcode:
  {% set current_timer = printer.toolhead.estimated_print_time %} 
  SET_GCODE_VARIABLE MACRO=BUTTON_PW_OFF VARIABLE=last_press VALUE={current_timer}
  G4 P2000
  BEEP P=100 N=2
release_gcode:
  {% set duration = printer.toolhead.estimated_print_time - printer["gcode_macro BUTTON_PW_OFF"].last_press|float %}
  {% if duration|float > 2.0 %}
      BUTTON_PW_OFF
  {% else %}
      {action_respond_info("Нажатие кнопки Power OFF было слишком коротким")}
  {% endif %}

# ##################################
# PROBE
####################################

[probe]
pin: PC4
x_offset: 0
y_offset: -30
z_offset: 0.5

[safe_z_home]
home_xy_position: 0,10
speed: 50
z_hop: 10
z_hop_speed: 8

[bed_mesh]
speed: 60
mesh_min: 15, 15
mesh_max: 220, 190
probe_count: 4, 4
algorithm: bicubic
fade_start: 1
fade_end: 10

[bed_screws]
screw1: 15,15
screw2: 210,15
screw3: 210,210
screw4: 15,210

[idle_timeout] # тайм-аут простоя
timeout: 600
gcode:
  {% if printer.pause_resume.is_paused %}
    M118 Idle timeout while paused, turning off hotend
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  {% else %}
    M118 Idle timeout
    TURN_OFF_HEATERS
    M84
    BEEP P=500
  {% endif %}

# ##################################
# Include macros
####################################

[include mainsail.cfg]
[include macros.cfg]

# Enable object exclusion
[exclude_object]

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : False # use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   # custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 0.0   # custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   # custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   # the value to retract while PAUSE
variable_cancel_retract   : 5.0   # the value to retract while CANCEL_PRINT
variable_speed_retract    : 45.0  # retract speed in mm/s
variable_unretract        : 1.0   # the value to unretract while RESUME
variable_speed_unretract  : 45.0  # unretract speed in mm/s
variable_speed_hop        : 10.0  # z move speed in mm/s
variable_speed_move       : 100.0 # move speed in mm/s
variable_park_at_cancel   : False # allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  # different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  # different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False # use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     # time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.389297, -0.329609, -0.341250, -0.413828
#*# 	-0.477344, -0.398047, -0.429922, -0.537813
#*# 	-0.515313, -0.429063, -0.446328, -0.590000
#*# 	-0.464609, -0.384766, -0.403906, -0.487188
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 219.99
#*# min_y = 15.0
#*# max_y = 189.99
