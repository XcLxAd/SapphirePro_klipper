# gcode_macro
[gcode_macro START_PRINT]
description: Начать печать
variable_retract: 0.6
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP|default(235)|float %}
    {% set bed_temp = params.BED_TEMP|default(80)|float %}
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    {% set Z_adjust = params.Z_ADJUST|default(0.0)|float %}
    CLEAR_PAUSE
    M220 S100                                                                # reset feedrate
    M221 S100                                                                # reset flowrate
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}               # set bed t℃
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp * 0.9}             # wait until bed is partially heated
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}            # set nozzle t℃
    G90                                                                      # absolute positioning
    M82                                                                      # absolute extrusion mode
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp}                    # wait until
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}                 # wait until
    G28                                                                      # home
    BED_MESH_CLEAR                                                           # clear old saved bed mesh (if any)
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default
    G0 Z10 F1500                                                             # raise Z
    G92 E0                                                                   # reset extruder
    G1 E{E} F1500                                                            # prime
    G92 E0
    # Adjust the G-Code z-offset if needed
    SET_GCODE_OFFSET Z_ADJUST={Z_adjust} MOVE=1

[gcode_macro END_PRINT]
description: Окончить печать
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    TURN_OFF_HEATERS
    G91
    G1 E-{E} F1500
    G0 Z5 F1500
    G90
    G0 X5 Y225 F5000
    M84
    M109 S60                                                               # Set and wait for nozzle to reach temperature
    PW_OFF_PRINTER                                                          # Power off

[gcode_macro PARK]
description: Парковка
gcode:
    {% set x_park = params.X|default(0)|float %}
    {% set y_park = params.Y|default(-4)|float %}
    {% set z_park = params.Z|default(10)|float + printer.toolhead.position.z|float %}
    {% set x_max = printer.toolhead.axis_maximum.x|float %}
    {% set y_max = printer.toolhead.axis_maximum.y|float %}
    {% set z_max = printer.toolhead.axis_maximum.z|float %}
    {% if x_park > x_max %}
        {% set x_park = x_max %}
    {% endif %}
    {% if y_park > y_max %}
        {% set y_park = y_max %}
    {% endif %}
    {% if z_park > z_max %}
        {% set z_park = z_max %}
    {% endif %}
    SAVE_GCODE_STATE NAME=PARK_STATE
    G90                                                                         # absolute positioning
    G1 Z{z_park} F1500
    G1 X{x_park} Y{y_park} F5000
    RESTORE_GCODE_STATE name=PARK_STATE

[gcode_macro FILAMENT_CHANGE]
description: Сменить филамент
gcode:
    SAVE_GCODE_STATE NAME=FILAMENT_CHANGE_STATE
    {% set timer = params.T|default(300)|float %}
    {% set unload = params.U|default(100)|float %}
    {% set load = params.L|default(100)|float %}
    {% if printer.pause_resume.is_paused %}
        M118 Already paused
    {% else %}
        {% if printer.toolhead.homed_axes != "xyz" %}
            M118 Homing
            G28                                                                 # home if not homed
        {% else %}
            M118 Pausing print
            PAUSE
        {% endif %}
    {% endif %}
    M118 Changing filament
    SET_IDLE_TIMEOUT TIMEOUT=7200
    FILAMENT_UNLOAD U={unload}
    COUNTDOWN TIME={timer} MSG="Change filament! Time left: "
    FILAMENT_LOAD L={load}
    RESTORE_GCODE_STATE NAME=FILAMENT_CHANGE_STATE
    {% if printer.pause_resume.is_paused %}
        M118 Resuming print
        RESUME
    {% endif %}

[gcode_macro FILAMENT_LOAD]
description: Загрузить филамент
gcode:
    {% set load = params.L|default(100)|float * 0.5 %}
    {% set extruder_temp = params.T|default(240)|float %}
    SAVE_GCODE_STATE NAME=FILAMENT_LOAD_STATE
    LOW_TEMP_CHECK T={extruder_temp}
    M118 Loading filament
    M83                                                                         # relative extrusion
    G1 E{load} F1500                                                            # extrude fast
    G4 P1000                                                                    # wait 1 second
    G1 E{load} F200                                                             # extrude slow
    BEEP
    RESTORE_GCODE_STATE NAME=FILAMENT_LOAD_STATE

[gcode_macro FILAMENT_UNLOAD]
description: Выгрузить филамент
gcode:
    {% set unload = params.U|default(100)|float %}
    {% set extruder_temp = params.T|default(180)|float %}
    SAVE_GCODE_STATE NAME=FILAMENT_UNLOAD_STATE
    LOW_TEMP_CHECK T={extruder_temp}
    M118 Unloading filament
    M83                                                                         # relative extrusion
    G1 E2  F200                                                                 # extrude a little
    G1 E-10  F200                                                               # retract a little
    G1 E-{unload} F1500                                                         # retract a lot
    BEEP
    RESTORE_GCODE_STATE NAME=FILAMENT_UNLOAD_STATE

[gcode_macro LOW_TEMP_CHECK]
description: Проверка температуры сопла
gcode:
    {% set extruder_temp = params.T|default(235)|float %}
    {% if printer.extruder.target > extruder_temp %}                            # if there is a setpoint for extruder
        {% set extruder_temp = printer.extruder.target %}
    {% endif %}
    {% if printer.extruder.temperature < extruder_temp %}                       # heat to the target
        M118 Heating to {extruder_temp}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
    {% endif %}

[gcode_macro COUNTDOWN]
gcode:
    {% set timer = params.TIME|default(10)|int %}
    {% set message = params.MSG|default("Time: ") %}
    # countdown
    {% if timer > 60 %}
        {% for s in range(timer, 60, -10) %}
            M118 {message} {s}s
            G4 P10000                                                           # dwell 10 seconds
        {% endfor %}
        {% set timer = 60 %}
    {% endif %}
    {% if timer > 10 %}
        {% for s in range(timer, 10, -5) %}
            M118 {message} {s}s
            G4 P5000                                                           # dwell 5 seconds
        {% endfor %}
        {% set timer = 10 %}
    {% endif %}
    {% if timer > 0 %}
        {% for s in range(timer, 0, -1) %}
            M118 {message} {s}s
            G4 P1000                                                           # dwell 1 second
        {% endfor %}
    {% endif %}

[gcode_macro PRIME_LINE]
description: Напечатать первую линию
gcode:
    {% set feedrate = params.F|default(10)|float * 60 %}
    {% set length = 100.0 %}
    {% set width = printer.configfile.settings.extruder.nozzle_diameter|float %}
    {% set height = ( (width / 0.04)|int - (width / 0.04 / 4)|int )|float * 0.04 %}
    {% set extrude = length * width * height / 1.6 %}
    SAVE_GCODE_STATE NAME=PRIME_LINE_STATE
    {% if 'Y' in params %}
        {% set x_start = 1.0 %}
        {% set y_start = (printer.toolhead.axis_maximum.y|float - 100) / 2 %}
        G0 X{x_start} Y{y_start} F5000                                          # move to start position
        G0 Z{height} F1500
        G91                                                                     # relative positioning
        G1 Y100 E{extrude} F{feedrate}                                          # draw the 1st line
        G0 X{width} F5000                                                       # move to the next line
        G1 Y-100 E{extrude} F{feedrate}                                         # draw the 2nd line
    {% else %}
        {% set x_start = (printer.toolhead.axis_maximum.x|float - 100) / 2 %}
        {% set y_start = 1.0 %}
        G0 X{x_start} Y{y_start} F5000                                          # move to start position
        G0 Z{height} F1500
        G91                                                                     # relative positioning
        G1 E4 F{feedrate}                                                       # prime
        G1 X100 E{extrude} F{feedrate}                                          # draw the 1st line
        G0 Y{width} F5000                                                       # move to the next line
        G1 X-100 E{extrude} F{feedrate}                                         # draw the 2nd line
    {% endif %}
    RESTORE_GCODE_STATE NAME=PRIME_LINE_STATE

[gcode_macro PW_OFF_PRINTER]
description: Выключить блок питания 24V принтера
gcode:
    SET_PIN PIN=PW_OFF VALUE=0

[gcode_macro M900]
description: Установить значение Linear Advance
gcode:
    {% if 'K' in params %}
        SET_PRESSURE_ADVANCE ADVANCE={ params.K|float }
    {% endif %}

[gcode_macro M600]
description: Замена филамента
gcode:
    FILAMENT_CHANGE

[gcode_macro M701] 
description: Загрузить филамент
gcode:
    FILAMENT_LOAD

[gcode_macro M702]
description: Выгрузить филамент
gcode:
    FILAMENT_UNLOAD

[gcode_macro M204]
description: Установить предпочтительное начальное ускорение
rename_existing: M204.1
gcode:
    {% set factor = params.F|default(0.5)|float %}
    {% if 'S' in params %}
        SET_VELOCITY_LIMIT ACCEL={S} ACCEL_TO_DECEL={ S|float * factor }
    {% else %}
        {% if 'P' in params %}
            {% if 'T' in params %}
                {% if P|int < T|int %}
                    SET_VELOCITY_LIMIT ACCEL={P} ACCEL_TO_DECEL={ P|float * factor }
                {% else %}
                    SET_VELOCITY_LIMIT ACCEL={T} ACCEL_TO_DECEL={ T|float * factor }
                {% endif %}
            {% else %}
                SET_VELOCITY_LIMIT ACCEL={P} ACCEL_TO_DECEL={ P|float * factor }
            {% endif %}
        {% elif 'T' in params %}
            SET_VELOCITY_LIMIT ACCEL={T} ACCEL_TO_DECEL={ T|float * factor }
        {% endif %}
    {% endif %}